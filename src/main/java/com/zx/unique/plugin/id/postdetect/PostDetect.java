package com.zx.unique.plugin.id.postdetect;

import com.intellij.ide.util.PropertiesComponent;
import com.intellij.openapi.project.Project;
import com.intellij.openapi.project.ProjectManager;
import com.intellij.openapi.ui.DialogWrapper;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.apache.commons.lang3.StringUtils;
import org.jetbrains.annotations.Nullable;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * @author: zx
 * @date: 2022/10/29
 */
public class PostDetect {
    private JTextField path;
    private JPanel rootPanel;
    private JTextField focalDistance;
    private JButton testBtn;
    private JCheckBox autoStartFlagComponent;

    public JPanel getRootPanel() {
        return rootPanel;
    }

    public JTextField getPathTF() {
        return path;
    }

    public JTextField getFocalDistanceTF() {
        return focalDistance;
    }

    public JCheckBox getAutoStartFlagComponent() {
        return autoStartFlagComponent;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(5, 2, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("python3绝对路径");
        rootPanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        path = new JTextField();
        path.setText("E:\\procedure\\python3\\python.exe");
        rootPanel.add(path, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("笔记本摄像头焦距f");
        rootPanel.add(label2, new GridConstraints(1, 0, 2, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        focalDistance = new JTextField();
        focalDistance.setText("600");
        rootPanel.add(focalDistance, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        testBtn = new JButton();
        testBtn.setText("测量(请将人脸与摄像头保持40cm距离)");
        testBtn.setToolTipText("");
        rootPanel.add(testBtn, new GridConstraints(2, 1, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("自动启用坐姿检测");
        rootPanel.add(label3, new GridConstraints(3, 0, 2, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        autoStartFlagComponent = new JCheckBox();
        autoStartFlagComponent.setText("自动启用");
        rootPanel.add(autoStartFlagComponent, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

    static class MyDialog extends DialogWrapper {

        protected MyDialog(@Nullable Project project) {
            super(project);
            init();
        }

        @Override
        protected @Nullable JComponent createCenterPanel() {
            return new JLabel("python3路径不能为空");
        }
    }
    public void register() {
        testBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (StringUtils.isEmpty(path.getText())) {
                    new MyDialog(ProjectManager.getInstance().getDefaultProject()).show();
                    return;
                }
                PropertiesComponent applicationComponent = PropertiesComponent.getInstance();
                if (StringUtils.isEmpty(applicationComponent.getValue("com.zx.unique.plugin.id_path"))) {
                    applicationComponent.setValue("com.zx.unique.plugin.id_path", path.getText());
                }
                if (StringUtils.isEmpty(applicationComponent.getValue("com.zx.unique.plugin.id_focalDistance"))) {
                    applicationComponent.setValue("com.zx.unique.plugin.id_focalDistance", focalDistance.getText());
                }
                JavaExecutePythonUtils.startCarema(true, "焦距检测启动");
            }
        });

        PropertiesComponent applicationComponent = PropertiesComponent.getInstance();
        if ("true".equals(applicationComponent.getValue("com.zx.unique.plugin.id-autoCheck"))) {
            autoStartFlagComponent.setSelected(true);
        }
    }
}
